const utils={getMaxLine:function(a,b){return a.length>b.length?a:b},getSpaces:function(count){return" ".repeat(count)}};const Types={SPRITE:"sprite",FEED:"feed",SPACE:"space",BUBBLE:"bubble",DRAW:"draw"};const SpriteManager={sprites:{},has:function(name){return this.sprites.hasOwnProperty(name)},get:function(name){return this.sprites[name]},set:function(name,text){this.sprites[name]=text.split("\n")}};const sprites={facebase:"*-----*\n| o o |\n|  -  |\n*-----*",cowboy:"   ___\n  |   |\n/-------\\\n | o o |\n |  -  |\n  *---*",beardman:" /+++\\\n| o o |\n|V(-)V|\n \\VVV/\n  \\V/",crazydino:"\\,--------\\\n | (.)   (@))  \n  \\   /\\__o_o) \n   \\_| / VVVVV  \n    \\ \\    \\   \n      `-`^^^^' ",nerd:".#####.\n|-o^o-|\n[__-__]",ninjabot:" .---.\n|=====|&\n \\___/"};for(let s in sprites){SpriteManager.set(s,sprites[s])}const ChatBubble={addBorder:function(lines,corners="****"){let maxLength=lines.reduce(utils.getMaxLine).length,line,padding=0,text=lines.slice(0);for(var l=0;l<text.length;l++){line="| ";if(text[l].length===maxLength){line+=text[l]}else{padding=maxLength-text[l].length;line+=text[l]+utils.getSpaces(padding)}line+=" |";text[l]=line}if(corners.length===1){corners=corners.repeat(4)}else if(corners.length===2){corners=corners[0].repeat(2)+corners[1].repeat(2)}else if(corners.length===3){corners+="*"}else if(corners.length>4){corners=corners.substring(0,4)}text.unshift(" "+"_".repeat(text[0].length-2)+" ",corners[0]+" ".repeat(text[0].length-2)+corners[1]);text.push(corners[2]+"_".repeat(text[0].length-2)+corners[3]);return text},addLeftArrow:function(text){for(var l=0;l<text.length;l++){text[l]=" "+text[l]}text[2]="< "+text[2].substring(2)},addTopArrow:function(text){text[0]=text[0][0]+"/\\"+text[0].substring(3)},addBottomArrow:function(text){let l=text.length-1;text[l]=text[l][0]+"  "+text[l].substring(3);text.push(" \\/")},addRightArrow:function(text){let l=text.length-1;text[2]=text[2].slice(0,-1)+" >"},get:function(lines,arrow="l",corners){text=lines.slice(0);if(typeof text==="string"){text=[text]}text=this.addBorder(text,corners);switch(arrow){case"t":this.addTopArrow(text);break;case"l":this.addLeftArrow(text);break;case"b":this.addBottomArrow(text);break;case"r":this.addRightArrow(text);break}return text}};const Board=function(parent,width=0,height=0){this.board=document.createElement("pre");this.lines;this.steps=[];this.size=[width,height];this.border=[];this.cursor=0;this.clear();if(parent){document.querySelector(parent).appendChild(this.board)}};Board.prototype.clear=function(){if(this.size[1]>0){this.lines=[];for(let l=0;l<this.size[1];l++){this.lines.push("")}}else{this.lines=[]}this.steps=[];this.cursor=0};Board.prototype.render=function(){let steps=this.steps.slice(0);this.clear();this.sequence(steps);if(this.border.length>0){this.lines=ChatBubble.addBorder(this.lines,this.border[0])}this.board.textContent=this.lines.join("\n")};Board.prototype.draw=function(text,line=this.cursor,addToSequence=true){if(typeof text==="string"){text=[text]}let maxLength=0,cursor=line;if(cursor>this.lines.length-1&&!this.size[1]){for(let n=this.lines.length;n<cursor;n++){this.lines.push("")}}else{maxLength=this.lines.slice(line,line+text.length).reduce(utils.getMaxLine).length}for(let l=0;l<text.length;l++){if(cursor>this.lines.length-1&&!this.size[1]){this.lines.push(utils.getSpaces(maxLength)+text[l])}else if(this.lines[cursor]&&this.lines[cursor].length<maxLength){this.lines[cursor]+=utils.getSpaces(maxLength-this.lines[cursor].length)+text[l]}else if(cursor<this.size[1]||!this.size[1]){this.lines[cursor]+=text[l]}cursor++}for(let l=line;l<cursor;l++){if(this.size[0]>0&&this.lines[l]){this.lines[l]=this.lines[l].substring(0,this.size[0])}}if(addToSequence){this.steps.push([Types.DRAW,text,line])}};Board.prototype.sprite=function(name,line){if(SpriteManager.has(name)){this.draw(SpriteManager.get(name),line,false);this.steps.push([Types.SPRITE,name,line])}};Board.prototype.bubble=function(text,arrow){this.steps.push([Types.BUBBLE,text,arrow]);this.draw(ChatBubble.get(text,arrow),undefined,false)};Board.prototype.feed=function(lines=0){this.cursor=-1;this.lines.forEach((line,index)=>{if(line.length>0){this.cursor=-1}else if(this.cursor<0){this.cursor=index}});if(this.cursor<0){this.cursor=this.lines.length}this.cursor+=lines;this.steps.push([Types.FEED,lines])};Board.prototype.space=function(space=1){this.steps.push([Types.SPACE,space]);this.draw(new Array(this.lines.length-this.cursor).fill(utils.getSpaces(space)),undefined,false)};Board.prototype.sequence=function(steps){for(let s=0;s<steps.length;s++){switch(steps[s][0]){case Types.SPRITE:this.sprite(steps[s][1],steps[s][2]);break;case Types.FEED:this.feed(steps[s][1]);break;case Types.SPACE:this.space(steps[s][1]);break;case Types.BUBBLE:this.bubble(steps[s][1],steps[s][2]);break;case Types.DRAW:this.draw(steps[s][1],steps[s][2]);break}}};Board.prototype.setBorder=function(corners="/\\\\/"){this.border=[corners]};const Comic=function(container){this.name="Comic "+Math.round(Math.random()*1e6);this.page=new Board(container);this.panels=[]};Comic.prototype.createPanel=function(){let panel=new Board;panel.setBorder();this.addPanel(panel);return panel};Comic.prototype.addSequence=function(sequence){let panel=this.createPanel();panel.sequence(sequence);return panel};Comic.prototype.addPanel=function(board){this.panels.push(board)};Comic.prototype.feed=function(){this.panels.push(Types.FEED)};Comic.prototype.load=function(data){this.name=data.name;this.panels=[];for(let p=0;p<data.panels.length;p++){if(data.panels[p]===Types.FEED){this.feed()}else{this.addSequence(data.panels[p])}}};Comic.prototype.render=function(){this.page.clear();for(let p=0;p<this.panels.length;p++){if(this.panels[p]===Types.FEED){this.page.feed(1)}else{this.panels[p].render();this.page.draw(this.panels[p].lines);if(p!==this.panels.length-1&&this.panels[p+1]!==Types.FEED){this.page.space(2)}}}this.page.render()};Comic.prototype.export=function(){let comic={name:this.name,panels:[]};for(let p=0;p<this.panels.length;p++){if(this.panels[p]===Types.FEED){comic.panels.push(Types.FEED)}else{comic.panels.push(this.panels[p].steps)}}return JSON.stringify(comic).replace(Comic.nullReplace,"")};Comic.nullReplace=/,null/g;const comics=[{name:"Comic 985957",panels:[[["sprite","crazydino"],["sprite","cowboy"],["sprite","facebase"]],[["sprite","Thing"],["sprite","facebase"],["sprite","cowboy"]]]},{name:"Comic 709088",panels:[[["sprite","facebase"],["sprite","cowboy"],["sprite","cowboy"]],[["sprite","nerd"],["sprite","facebase"],["sprite","ninjabot"]],"feed",[["sprite","nerd"],["sprite","ninjabot"],["sprite","cowboy"]],[["sprite","crazydino"],["bubble",["RAWR!","I Say RAWR!"],"l"]]]}];